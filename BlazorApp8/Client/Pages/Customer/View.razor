@page "/dialogcard/{CustomerID}"
@using BlazorApp8.Shared
@inject HttpClient Http

@inject Radzen.DialogService dialogService

@if (customer == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-lg-6 d-flex">
            <RadzenCard Style="width: 100%; overflow: hidden;">
                <h3 class="h5">Customer</h3>
                <div class="d-flex flex-row">
                    @*<RadzenImage Path="@order.Employee?.Photo" Class="rounded-circle float-left mt-1 mr-3" Style="width: 90px; height: 90px;" />*@
                    <div>
                        <div>Customer</div>
                        <b>@(customer.FirstName+ " " + customer.LastName)</b>
                        <div class="mt-3">Last name</div>
                        <b>@customer.Email</b>
                    </div>
                </div>
            </RadzenCard>
        </div>
        @*<div class="col-lg-6 d-flex">
            <RadzenCard Style="width: 100%; overflow: hidden;">
            <h3 class="h5">Delivery Information</h3>
            <div class="row">
            <div class="col">
            <div>Address</div>
            <b>@(order.ShipAddress), @(order.ShipCity), @(order.ShipCountry)</b>
            <div class="mt-3">Ship name</div>
            <b>@(order.ShipName)</b>
            </div>
            </div>
            </RadzenCard>
            </div>*@
    </div>
    <div class="row my-4">
        <div class="col-md-12">
            <RadzenCard>
                <h3 class="h5">
                    Products
                    @*<RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", order.Freight)}") Class="float-right" />*@
                </h3>
                <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" PageSize="10" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data="@products" TItem="Product" ColumnWidth="200px" Class="mt-3">
                    <Columns>
                        <RadzenDataGridColumn Width=20% TItem="Product" Property="Name" Title="Name" />
                        <RadzenDataGridColumn Width=40% TItem="Product" Property="Description" Title="Description" />
                        <RadzenDataGridColumn Width=20% TItem="Product" Property="Price" Title="Price" />
                        <RadzenDataGridColumn Width=20% TItem="Product" Property="Description" Title="Description" />
                    </Columns>
                </RadzenDataGrid>
            </RadzenCard>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <RadzenButton Click="@((args) => dialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Style="width: 120px" Class="mr-1" />
            <RadzenButton Click="@((args) => dialogService.Close(true))" Text="OK" Style="width: 120px" />
        </div>
    </div>
}

@code {
    [Parameter] public int CustomerID { get; set; }

    private Customer? customer;
    IEnumerable<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        customer = await Http.GetFromJsonAsync<Customer>("Customer/" + CustomerID);
        products = customer.Products;
    }
}